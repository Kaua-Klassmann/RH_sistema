//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "resume")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub name: String,
    pub cpf: String,
    pub phone: String,
    pub id_sector: u32,
    pub interview_date: Option<DateTime>,
    pub hired: bool,
    pub attachment: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub observation: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::sector::Entity",
        from = "Column::IdSector",
        to = "super::sector::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Sector,
}

impl Related<super::sector::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sector.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
